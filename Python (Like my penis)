def read_serial_data(port, baud_rate):
    ser = serial.Serial(port, baud_rate)  # Set a timeout of 1 second
    
    # Initialize plot
    plt.ion()
    fig, ax = plt.subplots()
    ax.set_aspect('equal', adjustable='datalim')
    line, = ax.plot([], [], marker='o')
    ax.set_xlim(-100, 100)
    ax.set_ylim(-100, 100)
    ax.set_title('Travel Path')
    ax.set_xlabel('X Position')
    ax.set_ylabel('Y Position')
    x_positions = []
    y_positions = []

    try:
        while True:
            line = ser.readline().decode().strip()
            
            try:
                x_y_values = line.split(',')
                if len(x_y_values) == 2:
                    x_voltage = float(x_y_values[0].strip())
                    y_voltage = float(x_y_values[1].strip())
                    x_positions.append((x_voltage - 1.6) * 100)  # Assuming 3.2 is full right, 0 is full left
                    y_positions.append((y_voltage - 1.6) * 100)  # Assuming 3.2 is full forward, 0 is full back
                    line.set_xdata(x_positions)
                    line.set_ydata(y_positions)
                    ax.relim()
                    ax.autoscale_view()
                    fig.canvas.draw()
                    fig.canvas.flush_events()
                else:
                    print(f"Invalid data format received: {line}")

            except ValueError:
                print(f"Invalid value received: {line}")

    except KeyboardInterrupt:
        print("Script terminated.")

    finally:
        print("Plotting completed.")
        ser.close()
